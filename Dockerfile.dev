# Use the `eclipse-temurin:17-jdk-alpine` image as the base image for this container
FROM eclipse-temurin:17-jdk-alpine AS build

# Update the package index and install the `inotify-tools` package
RUN apk update && \
    apk add inotify-tools git curl && \
    apk --no-cache add nodejs npm

# Set the working directory for the container to `/app`
WORKDIR /app/backend/

# Copy the `.mvn/` directory, `mvnw` file and `pom.xml` file from the local machine to the container
COPY ./backend/.mvn/ .mvn
COPY ./backend/mvnw ./backend/pom.xml ./

# Make the `mvnw` file executable
RUN chmod +x mvnw

# Copy the `src/` directory from the local machine to the container
COPY ./backend/src ./src

WORKDIR /app

# Change the working directory to `frontend` and run `npm install`
COPY frontend ./frontend
WORKDIR /app/frontend
RUN npm install --loglevel verbose

# Change the working directory back to `/app`
WORKDIR /app/backend

# Set the entrypoint for the container to be `./mvnw spring-boot:run`
ENTRYPOINT ["./mvnw", "spring-boot:run"]

EXPOSE 8080 8000